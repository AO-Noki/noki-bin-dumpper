name: Testes e Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.13']

    steps:
    - uses: actions/checkout@v4
    
    - name: Configurar Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Instalar dependências
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .
        python -m pip install pytest pytest-cov
      shell: pwsh
    
    - name: Criar diretórios para teste
      run: |
        New-Item -Path "tests/data" -ItemType Directory -Force
        New-Item -Path "tests/output" -ItemType Directory -Force
        New-Item -Path "logs/validation" -ItemType Directory -Force
      shell: pwsh
    
    - name: Executar testes
      run: |
        python -m pytest tests/ -v
      shell: pwsh
    
    - name: Armazenar resultado dos testes
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          tests/output/
          logs/
        if-no-files-found: warn

  build:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.13']

    steps:
    - uses: actions/checkout@v4
    
    - name: Configurar Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Instalar dependências
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .
        python -m pip install pyinstaller
      shell: pwsh
    
    - name: Construir executável
      run: |
        pyinstaller --onefile --name noki-bin-dumpper main.py --add-data "noki;noki"
      shell: pwsh
    
    - name: Extrair versão da tag
      id: get_version
      run: |
        $version = $env:GITHUB_REF -replace 'refs/tags/v', ''
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
      shell: pwsh
    
    - name: Criar Release
      uses: softprops/action-gh-release@v1
      with:
        name: Noki Bin Dumpper ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        files: |
          dist/noki-bin-dumpper.exe
        body: |
          ## Noki Bin Dumpper ${{ steps.get_version.outputs.VERSION }}
          
          ### Instalação
          
          - Faça o download do arquivo executável `noki-bin-dumpper.exe`
          - Execute-o com o caminho para o diretório de instalação do Albion Online
          
          ```
          noki-bin-dumpper.exe --path "C:\Program Files (x86)\Albion Online" --server live
          ``` 