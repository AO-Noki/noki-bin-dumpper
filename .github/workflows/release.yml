name: Build Release

on:
  push:
    tags:
      - 'v*'  # Executa o workflow quando uma tag com prefixo 'v' Ã© criada

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build Windows executable
        run: python build.py

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: dist/*.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build Linux executable
        run: python build.py

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: dist/*.zip

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build macOS executable
        run: python build.py

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: dist/*.zip

  create-release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: noki-bin-dumpper v${{ env.VERSION }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
          files: |
            artifacts/windows-build/*.zip
            artifacts/linux-build/*.zip
            artifacts/macos-build/*.zip 